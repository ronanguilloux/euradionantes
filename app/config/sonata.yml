cmf_routing:
    chain:
        routers_by_id:
            # enable the DynamicRouter with high priority to allow overwriting configured routes with content
            #cmf_routing.dynamic_router: 200
            # enable the symfony default router with a lower priority
            sonata.page.router: 150
            router.default: 100

sonata_cache:
    caches:
        esi:
            token: an unique security key # a random one is generated by default
            servers:
                - varnishadm -T 127.0.0.1:2000 {{ COMMAND }} "{{ EXPRESSION }}"

        ssi:
            token: an unique security key # a random one is generated by default

        apc:
            token:  s3cur3   # token used to clear the related cache
            prefix: test     # prefix to ensure there is no clash between instances
            servers:
                - { domain: kooqit.local, ip: 127.0.0.1, port: 80}

        symfony:
            token: s3cur3 # token used to clear the related cache
            php_cache_enabled: true # Optional (default: false), clear APC or PHP OPcache
            types: [mytype1, mycustomtype2] # Optional, you can restrict allowed cache types
            servers:
                - { domain: kooqit.local, ip: 127.0.0.1, port: 80}
sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb

sonata_block:
#    context_manager: sonata.page.block.context_manager
    default_contexts: [cms]
    context_manager: sonata.page.block.context_manager
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.admin_doctrine_orm.block.audit:
            contexts:   [admin]
        sonata.block.service.text:
        sonata.block.service.rss:

        sonata.media.block.media:
        sonata.media.block.gallery:
        sonata.media.block.feature_media:

        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes

sonata_seo:
    default:          sonata.seo.page.default
    encoding:         UTF-8
    page:
        title:            Sonata Project
        metas:
            name:
                keywords:             foo bar
                description:          The description
                robots:               index, follow

            property:
                # Facebook application settings
                #'fb:app_id':          XXXXXX
                #'fb:admins':          admin1, admin2

                # Open Graph information
                # see http://developers.facebook.com/docs/opengraphprotocol/#types or http://ogp.me/
                'og:site_name':       Sonata Project Sandbox
                'og:description':     A demo of the some rich bundles for your Symfony2 projects

            http-equiv:
                'Content-Type':         text/html; charset=utf-8
                #'X-Ua-Compatible':      IE=EmulateIE7

            charset:
                UTF-8:    ''

        head:
            'xmlns':              http://www.w3.org/1999/xhtml
            'xmlns:og':           http://opengraphprotocol.org/schema/
            #'xmlns:fb':           "http://www.facebook.com/2008/fbml"

sonata_notification:
    backend: sonata.notification.backend.runtime
    admin:
        enabled: false


sonata_page:
    multisite: host
    use_streamed_response: true # set the value to false in debug mode or if the reverse proxy does not handle streamed response
    ignore_route_patterns:
        - ^(.*)admin(.*)   # ignore admin route, ie route containing 'admin'
        - ^_(.*)          # ignore symfony routes

    ignore_routes:
        - sonata_page_cache_esi
        - sonata_page_cache_ssi
        - sonata_page_js_sync_cache
        - sonata_page_js_async_cache
        - sonata_cache_esi
        - sonata_cache_ssi
        - sonata_cache_js_async
        - sonata_cache_js_sync
        - sonata_cache_apc

    ignore_uri_patterns:
        - ^/admin\/   # ignore admin route, ie route containing 'admin'

    page_defaults:
        homepage: {decorate: false} # disable decoration for homepage, key - is a page route

    default_template: default # template key from templates section, used as default for pages
    templates:
        default:  { path: 'SonataPageBundle::layout.html.twig',          name: 'default' }
        2columns: { path: 'SonataPageBundle::2columns_layout.html.twig', name: '2 columns layout' }

    # manage the http errors
    catch_exceptions:
        not_found: [404]    # render 404 page with "not_found" key (name generated: _page_internal_error_{key})
        fatal:     [500]    # so you can use the same page for different http errors or specify specific page for each error

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
        news:
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image

            formats:
                small: { width: 150 , quality: 95}
                big:   { width: 500 , quality: 90}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false

sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig #keep this commented unless you are using media bundle.


        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

sonata_classification: ~

sonata_news:
    title:        Sonata Project
    link:         http://sonata-project.org
    description:  Cool bundles on top of Symfony2
    salt:         'secureToken'
    permalink_generator: sonata.news.permalink.date # sonata.news.permalink.collection

    comment:
        notification:
            emails:   [email@example.org, email2@example.org]
            from:     no-reply@sonata-project.org
            template: 'SonataNewsBundle:Mail:comment_notification.txt.twig'

# IVORY WYSIWYG EDITOR
ivory_ck_editor:
    default_config: default
    configs:
        default:
            toolbar: standard
            filebrowserBrowseRoute: admin_sonata_media_media_ckeditor_browser
            filebrowserImageBrowseRoute: admin_sonata_media_media_ckeditor_browser
            # Display images by default when clicking the image dialog browse button
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
            filebrowserUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
            # Upload file as image when sending a file from the image dialog
            filebrowserImageUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image
                # context: my-context # Optional, to upload in a custom context


# Default configuration for "SonataAdminBundle"
sonata_admin:
    security:
        handler:              sonata.admin.security.handler.noop
        information:

            # Prototype
            id:                   []
        admin_permissions:

            # Defaults:
            - CREATE
            - LIST
            - DELETE
            - UNDELETE
            - EXPORT
            - OPERATOR
            - MASTER
        object_permissions:

            # Defaults:
            - VIEW
            - EDIT
            - DELETE
            - UNDELETE
            - OPERATOR
            - MASTER
            - OWNER
        acl_user_manager:     ~         # Name of the user manager service used to retrieve ACL users
    title:                Sonata Admin
    title_logo:           bundles/sonataadmin/logo_title.png
    options:
        html5_validate:                         true      # use html5 validation
        confirm_exit:                           true      # enabled confirmation when quitting with unsaved changes
        use_select2:                            true      # enable select2
        use_icheck:                             true      # enable iCheck
#        pager_links:                            ~         # pager max links to display
        dropdown_number_groups_per_colums:      2         # max items per column in dropdown menu (add button in top nav)
        title_mode:           'both'                      # 'both', 'single_text' or 'single_image'
    dashboard:
        groups:

            # Prototype
            id:
                label:                ~
                label_catalogue:      ~
                items:                []
                item_adds:            []
                roles:                []
        blocks:
            type:                 ~
            settings:

                # Prototype
                id:                   []
            position:             right
    admin_services:

        # Prototype
        id:
            model_manager:        ~
            form_contractor:      ~
            show_builder:         ~
            list_builder:         ~
            datagrid_builder:     ~
            translator:           ~
            configuration_pool:   ~
            router:               ~
            validator:            ~
            security_handler:     ~
            label:                ~
    templates:
        user_block:           SonataAdminBundle:Core:user_block.html.twig
        add_block:            SonataAdminBundle:Core:add_block.html.twig
        layout:               SonataAdminBundle::standard_layout.html.twig
        ajax:                 SonataAdminBundle::ajax_layout.html.twig
        dashboard:            SonataAdminBundle:Core:dashboard.html.twig
        search:               SonataAdminBundle:Core:search.html.twig
        list:                 SonataAdminBundle:CRUD:list.html.twig
        filter:               SonataAdminBundle:Form:filter_admin_fields.html.twig
        show:                 SonataAdminBundle:CRUD:show.html.twig
        show_compare:         SonataAdminBundle:CRUD:show_compare.html.twig
        edit:                 SonataAdminBundle:CRUD:edit.html.twig
        preview:              SonataAdminBundle:CRUD:preview.html.twig
        history:              SonataAdminBundle:CRUD:history.html.twig
        acl:                  SonataAdminBundle:CRUD:acl.html.twig
        history_revision_timestamp:  SonataAdminBundle:CRUD:history_revision_timestamp.html.twig
        action:               SonataAdminBundle:CRUD:action.html.twig
        select:               SonataAdminBundle:CRUD:list__select.html.twig
        list_block:           SonataAdminBundle:Block:block_admin_list.html.twig
        search_result_block:  SonataAdminBundle:Block:block_search_result.html.twig
        short_object_description:  SonataAdminBundle:Helper:short-object-description.html.twig
        delete:               SonataAdminBundle:CRUD:delete.html.twig
        batch:                SonataAdminBundle:CRUD:list__batch.html.twig
        batch_confirmation:   SonataAdminBundle:CRUD:batch_confirmation.html.twig
        inner_list_row:       SonataAdminBundle:CRUD:list_inner_row.html.twig
        base_list_field:      SonataAdminBundle:CRUD:base_list_field.html.twig
        pager_links:          SonataAdminBundle:Pager:links.html.twig
        pager_results:        SonataAdminBundle:Pager:results.html.twig
        tab_menu_template:    SonataAdminBundle:Core:tab_menu_template.html.twig

    assets:
        stylesheets:
            # Defaults:
            - bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css
            - bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css
            - bundles/sonatacore/vendor/ionicons/css/ionicons.min.css
            - bundles/sonataadmin/vendor/AdminLTE/css/AdminLTE.css
            - bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css
            - bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css
            - bundles/sonatacore/vendor/select2/select2.css
            - bundles/sonatacore/vendor/select2/select2-bootstrap.css
            - bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css
            - bundles/sonataadmin/css/styles.css
            - bundles/sonataadmin/css/layout.css
            - bundles/sonataadmin/css/tree.css

        javascripts:
            # Defaults:
            - bundles/sonatacore/vendor/jquery/dist/jquery.min.js
            - bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js
            - bundles/sonatacore/vendor/moment/min/moment.min.js
            - bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js
            - bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js
            - bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js
            - bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js
            - bundles/sonataadmin/jquery/jquery.form.js
            - bundles/sonataadmin/jquery/jquery.confirmExit.js
            - bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js
            - bundles/sonatacore/vendor/select2/select2.min.js
            - bundles/sonataadmin/App.js
            - bundles/sonataadmin/Admin.js
            - bundles/sonataadmin/treeview.js

    extensions:

        # Prototype
        id:
            admins:               []
            excludes:             []
            implements:           []
            extends:              []
            instanceof:           []
    persist_filters:      false     # set to true to persist filter settings per admin module in the user's session